{"version":3,"sources":["../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","Components/buttons.jsx","pages/Auth/LoginPage.jsx"],"names":["Button","React","ref","as","bsPrefix","variant","size","active","className","props","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","disabled","displayName","defaultProps","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","GoogleButton","onClick","window","location","api","defaults","baseURL","width","height","alt","src","LoginPage","useState","retry","setRetry","useEffect","URLSearchParams","search","get","Container","Col","sm","xs"],"mappings":"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","file":"static/js/5.6458bc56.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { api } from \"../resources/api\";\n\nexport const GoogleButton = (props) => {\n  const handleLogin = () => {\n    window.location.href = api.defaults.baseURL + \"/auth/google\";\n  };\n\n  return (\n    <Button\n      onClick={handleLogin}\n      className=\"d-inline-flex align-items-center bg-light text-dark\"\n    >\n      <img\n        width=\"20px\"\n        height=\"20px\"\n        alt=\"Google sign-in\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\"\n      />\n      &nbsp;&nbsp;&nbsp; Login with Google\n    </Button>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Col, Container, Card } from \"react-bootstrap\";\nimport { GoogleButton } from \"../../Components/buttons\";\n\nconst LoginPage = () => {\n  const [retry, setRetry] = useState(false);\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    if (params.get(\"retry\")) {\n      setRetry(true);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Col className=\"mx-auto text-center\" sm=\"6\" xs=\"12\">\n        <Card className=\"p-4\">\n          <h2>Login</h2>\n          <Card.Body>\n            {retry && (\n              <div className=\"mb-3\">\n                You can login with your Google account. Permission to access\n                your tasks is required. Please accept the request. Try to login\n                with your Google account.\n              </div>\n            )}\n            <GoogleButton />\n          </Card.Body>\n        </Card>\n      </Col>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}