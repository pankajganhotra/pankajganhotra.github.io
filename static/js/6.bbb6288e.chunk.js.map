{"version":3,"sources":["Modals/AddTaskModal/util.js","Modals/AddTaskModal/index.jsx"],"names":["initialValues","content","validationSchema","Yup","shape","required","trim","validate","values","abortEarly","AddTaskModal","useSelector","state","modals","taskModal","edit","onSubmitHandler","useCallback","setSubmitting","updateTask","_id","addTask","formik","resetForm","useFormik","onSubmit","useEffect","setValues","Modal","show","onHide","toggleTaskModal","Header","closeButton","className","ModalTitle","Form","handleSubmit","ModalBody","InputGroup","FormControl","type","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","disabled","isSubmitting","isValid","touched","errors","isInvalid","Feedback","ModalFooter","Button","variant","onClick","handleReset","Spinner","as","animation","size","role"],"mappings":"2NAEaA,EAAgB,CACzBC,QAAS,IAGAC,EAAmBC,MAAaC,MAAM,CAC/CH,QAASE,MAAaE,SAAS,YAAYC,SAIlCC,EAAW,SAACL,GACrB,OAAO,SAACM,GAAD,OAAYN,EAAiBK,SAASC,EAAQ,CACjDC,YAAY,M,+BC2FLC,UAtFM,WACnB,MAA4BC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAjDC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAEbC,EAAkBC,uBACtB,SAACT,EAAD,GAAgC,IAArBU,EAAoB,EAApBA,cACLH,EACFI,YACE,CACEC,IAAKL,EAAKK,IACVnB,QAASO,EAAOP,SAElBiB,GAGFG,YAAQb,EAAQU,GAElBI,EAAOC,cAET,CAACR,IAGGO,EAASE,YAAU,CACvBxB,gBACAE,mBACAK,WACAkB,SAAUT,IASZ,OANAU,qBAAU,WACJX,GACFO,EAAOK,UAAU,CAAE1B,QAASc,EAAKd,YAElC,CAACc,IAGF,eAACa,EAAA,EAAD,CAAOC,KAAMf,EAAWgB,OAAQ,kBAAMC,eAAtC,UACE,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAACC,UAAU,WAApC,SACE,cAACC,EAAA,EAAD,UAAapB,EAAO,YAAc,eAGpC,eAACqB,EAAA,EAAD,CAAMX,SAAUH,EAAOe,aAAvB,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,UACLC,YAAY,WACZC,SAAUtB,EAAOuB,aACjBC,OAAQxB,EAAOyB,WACfC,MAAO1B,EAAOd,OAAOP,QACrBgD,SAAU3B,EAAO4B,aACjBC,QAAS7B,EAAO8B,QAAQnD,UAAYqB,EAAO+B,OAAOpD,QAClDqD,UAAWhC,EAAO8B,QAAQnD,WAAaqB,EAAO+B,OAAOpD,UAEvD,cAACuC,EAAA,EAAYe,SAAb,CAAsBd,KAAK,UAA3B,SACGnB,EAAO+B,OAAOpD,eAIrB,eAACuD,EAAA,EAAD,CAAatB,UAAU,MAAvB,UACE,cAACuB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASrC,EAAOsC,YAA5C,mBAGA,cAACH,EAAA,EAAD,CACEC,QAAQ,UACRjB,KAAK,SACLQ,UAAW3B,EAAO6B,SAAW7B,EAAO4B,aAHtC,SAKG5B,EAAO4B,aACN,cAACW,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACL,cAAY,SAGd","file":"static/js/6.bbb6288e.chunk.js","sourcesContent":["import * as Yup from 'yup';\n\nexport const initialValues = {\n    content: '',\n};\n\nexport const validationSchema = Yup.object().shape({\n    content: Yup.string().required('Required').trim(),\n});\n\n\nexport const validate = (validationSchema) => {\n    return (values) => validationSchema.validate(values, {\n        abortEarly: false,\n    });\n};","import React, { useCallback, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalTitle,\n  ModalBody,\n  Form,\n  InputGroup,\n  FormControl,\n  Button,\n  ModalFooter,\n  Spinner,\n} from \"react-bootstrap\";\nimport { useFormik } from \"formik\";\nimport { initialValues, validationSchema, validate } from \"./util\";\nimport { addTask, updateTask } from \"../../app/store/actions/taskActions\";\nimport { useSelector } from \"react-redux\";\nimport { toggleTaskModal } from \"../../app/store/actions/modalActions\";\n\nconst AddTaskModal = () => {\n  const { taskModal, edit } = useSelector((state) => state.modals);\n\n  const onSubmitHandler = useCallback(\n    (values, { setSubmitting }) => {\n      if (edit) {\n        updateTask(\n          {\n            _id: edit._id,\n            content: values.content,\n          },\n          setSubmitting\n        );\n      } else {\n        addTask(values, setSubmitting);\n      }\n      formik.resetForm();\n    },\n    [edit]\n  );\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    validate,\n    onSubmit: onSubmitHandler,\n  });\n\n  useEffect(() => {\n    if (edit) {\n      formik.setValues({ content: edit.content });\n    }\n  }, [edit]);\n\n  return (\n    <Modal show={taskModal} onHide={() => toggleTaskModal()}>\n      <Modal.Header closeButton className=\"p-1 px-2\">\n        <ModalTitle>{edit ? \"Edit Task\" : \"Add Task\"}</ModalTitle>\n        {/* <h3 className=\"text-center\">{edit ? \"Edit\" : \"Add\"} Task</h3> */}\n      </Modal.Header>\n      <Form onSubmit={formik.handleSubmit}>\n        <ModalBody>\n          <InputGroup>\n            <FormControl\n              type=\"text\"\n              name=\"content\"\n              placeholder=\"Add Task\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.content}\n              disabled={formik.isSubmitting}\n              isValid={formik.touched.content && !formik.errors.content}\n              isInvalid={formik.touched.content && !!formik.errors.content}\n            />\n            <FormControl.Feedback type=\"invalid\">\n              {formik.errors.content}\n            </FormControl.Feedback>\n          </InputGroup>\n        </ModalBody>\n        <ModalFooter className=\"p-1\">\n          <Button variant=\"secondary\" onClick={formik.handleReset}>\n            Reset\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"submit\"\n            disabled={!formik.isValid || formik.isSubmitting}\n          >\n            {formik.isSubmitting ? (\n              <Spinner\n                as=\"span\"\n                animation=\"border\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            ) : (\n              \"Submit\"\n            )}\n          </Button>\n        </ModalFooter>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default AddTaskModal;\n"],"sourceRoot":""}