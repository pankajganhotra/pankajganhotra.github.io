{"version":3,"sources":["app/store/actionTypes/taskActionTypes.js","routes.js","Layout/Header.jsx","Util/ErrorBoundary.jsx","Modals/index.jsx","App.js","reportWebVitals.js","index.js","app/store/reducers/authReducer.js","app/store/reducers/taskReducer.js","app/store/reducers/modalReducer.js","app/store/reducers/index.js","app/saga/authSaga/watchCheckSession.js","app/saga/tasksSaga/getTasks.js","app/saga/tasksSaga/addTask.js","app/saga/tasksSaga/updateTask.js","app/saga/tasksSaga/deleteTask.js","app/saga/index.js","app/store/index.js","resources/api.js","app/store/actions/taskActions.js","app/store/actions/authActions.js","app/store/actions/modalActions.js","Util/Fallback.jsx","app/store/actionTypes/authActionTypes.js","app/store/actionTypes/modalActionTypes.js"],"names":["GET_TASKS","GET_TASKS_SUCCESS","ADD_TASK","ADD_TASK_SUCCESS","UPDATE_TASK","UPDATE_TASK_SUCCESS","DELETE_TASK","DELETE_TASK_SUCCESS","LoginPage","React","lazy","TaskList","publicRoutes","path","exact","component","Redirect","props","to","privateRoutes","Header","useSelector","state","auth","user","handleLogout","a","api","get","setAuth","console","error","Navbar","bg","expand","className","Container","Brand","Toggle","Collapse","id","Nav","Link","email","onClick","toggleTaskModal","ErrorBoundary","hasError","errorInfo","log","this","Col","xs","sm","children","Component","AddTaskModal","Modals","fallback","Fallback","App","loading","useEffect","checkSession","getRoutes","useCallback","map","route","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","store","document","getElementById","authReducer","produce","type","payload","SET_AUTH","tasksReducer","items","count","item","_id","filter","modalReducer","TOGGLE_TASK_MODAL","taskModal","edit","rootReducer","combineReducers","AuthReducer","tasks","TasksReducer","modals","ModalsReducer","watchCheckSession","call","res","data","takeLatest","getTasks","watchGetTasks","getTasksSuccess","addTask","watchAddTask","setSubmitting","post","addTaskSuccess","task","toast","success","message","takeEvery","updateTask","watchUpdateTask","put","updateTaskSuccess","deleteTask","watchDeleteTask","delete","deleteTaskSuccess","rootSaga","all","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","axios","create","baseURL","process","withCredentials","interceptors","response","use","includes","status","Promise","reject","dispatch","CHECK_SESSION","animation","role","size"],"mappings":"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","file":"static/js/main.c2361b90.chunk.js","sourcesContent":["export const GET_TASKS = 'GET_TASKS';\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS';\n\nexport const ADD_TASK = 'ADD_TASK';\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS';\n\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const UPDATE_TASK_SUCCESS = 'UPDATE_TASK_SUCCESS';\n\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const DELETE_TASK_SUCCESS = 'DELETE_TASK_SUCCESS';","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nconst LoginPage = React.lazy(() => import(\"./pages/Auth/LoginPage\"))\nconst TaskList = React.lazy(() => import(\"./pages/Tasks/Tasklist\"))\n\n//Public Routes\nexport const publicRoutes = [\n    { path: '/login', exact: true, component: LoginPage },\n    { path: null, component: Redirect, props: { to: '/login' } }\n]\n\nexport const privateRoutes = [\n    { path: '/', exact: true, component: TaskList },\n    { path: null, component: Redirect, props: { to: '/' } }\n]","import React from \"react\";\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\nimport { setAuth } from \"../app/store/actions/authActions\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"../resources/api\";\nimport { toggleTaskModal } from \"../app/store/actions/modalActions\";\n\nconst Header = () => {\n  const { auth, user } = useSelector((state) => state.auth);\n\n  const handleLogout = async () => {\n    try {\n      await api.get(\"/auth/logout\");\n      setAuth({});\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <Navbar bg=\"light\" expand=\"lg\" className=\"mb-3\">\n      <Container>\n        <Navbar.Brand className=\"mx-auto\">To-Do App</Navbar.Brand>\n        {auth && (\n          <>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"ms-auto\">\n                <Nav.Link>{user.email}</Nav.Link>\n                <Nav.Link onClick={() => toggleTaskModal()}>Add Task</Nav.Link>\n                <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n          </>\n        )}\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Container, Col } from \"react-bootstrap\";\n\n//Error Boundary not possible in functional component\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(\"logErrorToMyService\", error, errorInfo);\n  }\n\n  render() {\n    if (!this.state.hasError) {\n      return this.props.children;\n    }\n\n    return (\n      <Container>\n        <Col xs=\"6\" sm=\"12\" className=\"mx-auto\">\n          <h1>Something went wrong</h1>\n        </Col>\n      </Container>\n    );\n  }\n}\n","import React, { Suspense } from \"react\";\nimport Fallback from \"../Util/Fallback\";\n\nconst AddTaskModal = React.lazy(() => import(\"./AddTaskModal\"));\n\nconst Modals = () => {\n  return (\n    <Suspense fallback={<Fallback />}>\n      <AddTaskModal />\n    </Suspense>\n  );\n};\n\nexport default Modals;\n","import React, { Suspense, useCallback, useEffect } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { privateRoutes, publicRoutes } from \"./routes\";\n\nimport Header from \"./Layout/Header\";\nimport { useSelector } from \"react-redux\";\nimport { checkSession } from \"./app/store/actions/authActions\";\nimport Fallback from \"./Util/Fallback\";\nimport ErrorBoundary from \"./Util/ErrorBoundary\";\nimport { ToastContainer } from \"react-toastify\"\nimport Modals from \"./Modals\";\n\n\nconst App = () => {\n  const { auth, user, loading } = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    checkSession();\n  }, []);\n\n  const getRoutes = useCallback(() => {\n    if (auth) {\n      return privateRoutes;\n    } else {\n      return publicRoutes;\n    }\n  }, [auth]);\n\n  if (loading) {\n    return <Fallback />;\n  }\n\n  return (\n    <ErrorBoundary>\n      <BrowserRouter>\n        <ToastContainer />\n        <Header user={user} />\n\n        <Suspense fallback={<Fallback />}>\n          <Switch>\n            {getRoutes().map((route) => (\n              <Route\n                key={route.path}\n                path={route.path}\n                exact={route.exact}\n                render={(props) => (\n                  <route.component\n                    {...props} //Routing props\n                    {...(route.props || {})} //Component props defined in routes.js\n                  />\n                )}\n              />\n            ))}\n          </Switch>\n        </Suspense>\n        <Modals />\n      </BrowserRouter>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\"\nimport store from './app/store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { produce } from 'immer';\nimport { SET_AUTH } from '../actionTypes/authActionTypes';\n\nconst initialState = {\n    auth: false,\n    loading: false,\n    user: null,\n    error: null\n}\n\nconst authReducer = produce((state, { type, payload }) => {\n    switch (type) {\n        case SET_AUTH:\n            return {\n                ...state,\n                loading: false,\n                auth: payload.auth,\n                user: payload.user,\n            }\n        default:\n            return state;\n    }\n\n}, initialState);\n\nexport default authReducer;","import { produce } from 'immer';\nimport {\n    GET_TASKS,\n    GET_TASKS_SUCCESS,\n    ADD_TASK_SUCCESS,\n    UPDATE_TASK_SUCCESS,\n    DELETE_TASK_SUCCESS,\n} from '../actionTypes/taskActionTypes';\n\nconst initialState = {\n    items: [],\n    count: 0,\n    loading: true,\n}\n\nconst tasksReducer = produce((state, { type, payload }) => {\n    switch (type) {\n        case GET_TASKS:\n            return {\n                ...state,\n                loading: true,\n            }\n        case GET_TASKS_SUCCESS:\n            return {\n                ...state,\n                items: payload.items,\n                count: payload.count,\n                loading: false,\n            }\n        case ADD_TASK_SUCCESS:\n            return {\n                ...state,\n                items: [payload, ...state.items],\n                count: state.count + 1,\n            }\n        case UPDATE_TASK_SUCCESS:\n            return {\n                ...state,\n                items: state.items.map(item => item._id === payload._id ? payload : item),\n            }\n        case DELETE_TASK_SUCCESS:\n            return {\n                ...state,\n                items: state.items.filter(item => item._id !== payload._id),\n                count: state.count - 1,\n            }\n        default:\n            return state;\n    }\n\n}, initialState);\n\nexport default tasksReducer;","import { produce } from \"immer\"\nimport { TOGGLE_TASK_MODAL } from \"../actionTypes/modalActionTypes\"\n\nconst initialState = {\n    edit: null,\n    taskModal: false,\n}\n\nconst modalReducer = produce((state, { type, payload }) => {\n    switch (type) {\n        case TOGGLE_TASK_MODAL:\n            return {\n                ...state,\n                taskModal: !state.taskModal,\n                edit: payload\n            }\n        default:\n            return state\n    }\n}, initialState)\n\n\nexport default modalReducer","import { combineReducers } from \"redux\"\n\nimport AuthReducer from \"./authReducer\"\nimport TasksReducer from \"./taskReducer\";\nimport ModalsReducer from \"./modalReducer\";\n// import UserReducer from \"./\"\n\n\nconst rootReducer = combineReducers({\n    auth: AuthReducer,\n    tasks: TasksReducer,\n    modals: ModalsReducer\n})\n\nexport default rootReducer;","import { takeLatest, call } from \"redux-saga/effects\"\nimport { api } from \"../../../resources/api\"\nimport { setAuth } from \"../../store/actions/authActions\"\n\nfunction* checkSession() {\n    try {\n        const res = yield call(() => api.get(\"/auth/session\"))\n        console.log(res.data)\n        setAuth(res.data)\n    } catch (e) {\n        console.error(e)\n        setAuth({}) //Sets loading false in auth reducer\n    }\n}\n\n\nexport function* watchCheckSession() {\n    yield takeLatest(\"CHECK_SESSION\", checkSession)\n}","import { call, takeLatest } from 'redux-saga/effects'\nimport { api } from '../../../resources/api';\nimport { getTasksSuccess } from '../../store/actions/taskActions';\nimport { GET_TASKS } from '../../store/actionTypes/taskActionTypes';\n\nfunction* getTasks({ payload }) {\n    try {\n        const res = yield call(() => api.get(\"/tasks\"))\n        getTasksSuccess({\n            items: res.data.tasks,\n            count: res.data.count\n        })\n    } catch (e) {\n        getTasksSuccess({\n            items: [],\n            count: 0\n        }); //Will Set loading false\n        console.error(e);\n    }\n}\n\nexport function* watchGetTasks() {\n    yield takeLatest(GET_TASKS, getTasks);\n}","import { toast } from 'react-toastify';\nimport { call, takeEvery } from 'redux-saga/effects'\nimport { api } from '../../../resources/api';\nimport { toggleTaskModal } from '../../store/actions/modalActions';\nimport { addTaskSuccess } from '../../store/actions/taskActions';\nimport { ADD_TASK } from '../../store/actionTypes/taskActionTypes';\n\nfunction* addTask({ payload, setSubmitting }) {\n    try {\n        const res = yield call(() => api.post(\"/tasks/add\", payload))\n        addTaskSuccess(res.data.task)\n        setSubmitting(false)\n        toggleTaskModal()\n        toast.success(res.data.message)\n    } catch (e) {\n        console.error(e);\n        setSubmitting(false)\n    }\n}\n\nexport function* watchAddTask() {\n    yield takeEvery(ADD_TASK, addTask);\n}","import { call, takeEvery } from 'redux-saga/effects'\nimport { api } from '../../../resources/api';\nimport { toggleTaskModal } from '../../store/actions/modalActions';\nimport { updateTaskSuccess } from '../../store/actions/taskActions';\nimport { UPDATE_TASK } from '../../store/actionTypes/taskActionTypes';\nimport { toast } from 'react-toastify';\n\nfunction* updateTask({ payload, setSubmitting }) {\n    try {\n        const res = yield call(() => api.put(`/tasks/update/${payload._id}`, payload))\n        updateTaskSuccess(res.data.task)\n        setSubmitting(false)\n        toggleTaskModal()\n        toast.success(res.data.message)\n    } catch (e) {\n        console.error(e);\n        setSubmitting(false)\n    }\n}\n\nexport function* watchUpdateTask() {\n    yield takeEvery(UPDATE_TASK, updateTask);\n}","import { toast } from 'react-toastify';\nimport { call, takeEvery } from 'redux-saga/effects'\nimport { api } from '../../../resources/api';\nimport { deleteTaskSuccess } from '../../store/actions/taskActions';\nimport { DELETE_TASK } from '../../store/actionTypes/taskActionTypes';\n\nfunction* deleteTask({ payload, setSubmitting }) {\n    try {\n        const res = yield call(() => api.delete(`/tasks/remove/${payload}`))\n        deleteTaskSuccess(res.data.task)\n        setSubmitting(false)\n        toast.success(res.data.message)\n    } catch (e) {\n        console.error(e);\n        setSubmitting(false)\n    }\n}\n\nexport function* watchDeleteTask() {\n    yield takeEvery(DELETE_TASK, deleteTask);\n}","import { all } from \"redux-saga/effects\"\n\nimport { watchCheckSession } from \"./authSaga\"\nimport {\n    watchGetTasks, watchAddTask,\n    watchUpdateTask, watchDeleteTask,\n} from './tasksSaga'\n\nexport default function* rootSaga() {\n    yield all([\n        //auth\n        watchCheckSession(),\n        // tasks\n        watchGetTasks(),\n        watchAddTask(),\n        watchUpdateTask(),\n        watchDeleteTask(),\n    ])\n}\n","import { applyMiddleware, createStore } from \"redux\"\nimport rootReducer from \"./reducers\"\nimport createSagaMiddleware from \"redux-saga\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport rootSaga from \"../saga\"\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(rootReducer,\n    composeWithDevTools(\n        applyMiddleware(sagaMiddleware)\n    ))\n\nsagaMiddleware.run(rootSaga)\n\n\nexport default store;","import axios from 'axios';\nimport { toast } from \"react-toastify\"\nimport { setAuth } from '../app/store/actions/authActions';\n\nexport const api = axios.create({\n    baseURL: process.env.REACT_APP_ENV === 'production'\n        ? process.env.REACT_APP_PROD_SERVER_URL\n        : process.env.REACT_APP_DEV_SERVER_URL,\n    withCredentials: true\n});\n\napi.interceptors.response.use(\n    response => {\n        // toast.success(response.data.message)\n        return response;\n    },\n    error => {\n        if (error.message.includes('Network Error')) {\n            return toast.error('Network error, please try again later.');\n        }\n        switch (error.response.status) {\n            case 401:\n                setAuth({})//Authentication error\n                toast.error(\"Authentication Required\");\n                return Promise.reject(error);\n            case 403:\n                toast.error(\"You don't have permission to do this\");\n                return Promise.reject(error);\n            case 404:\n                toast.error(\"404 : Page not found\");\n                return Promise.reject(error);\n            default:\n                toast.error(\"Something went wrong\");\n        }\n    }\n);","import store from \"..\";\n\n\nimport {\n    GET_TASKS,\n    GET_TASKS_SUCCESS,\n    ADD_TASK,\n    ADD_TASK_SUCCESS,\n    UPDATE_TASK,\n    UPDATE_TASK_SUCCESS,\n    DELETE_TASK,\n    DELETE_TASK_SUCCESS\n} from \"../actionTypes/taskActionTypes\";\n\nexport const getTasks = (payload) => {\n    store.dispatch({\n        type: GET_TASKS, payload\n    });\n}\n\nexport const getTasksSuccess = (payload) => {\n    store.dispatch({\n        type: GET_TASKS_SUCCESS, payload\n    });\n}\n\nexport const addTask = (payload, setSubmitting) => {\n    store.dispatch({\n        type: ADD_TASK, payload, setSubmitting\n    });\n}\n\nexport const addTaskSuccess = (payload) => {\n    store.dispatch({\n        type: ADD_TASK_SUCCESS, payload\n    });\n}\n\nexport const updateTask = (payload, setSubmitting) => {\n    store.dispatch({\n        type: UPDATE_TASK, payload, setSubmitting\n    });\n}\n\nexport const updateTaskSuccess = (payload) => {\n    store.dispatch({\n        type: UPDATE_TASK_SUCCESS, payload\n    });\n}\n\nexport const deleteTask = (payload, setSubmitting) => {\n    store.dispatch({\n        type: DELETE_TASK, payload, setSubmitting\n    });\n}\n\nexport const deleteTaskSuccess = (payload) => {\n    store.dispatch({\n        type: DELETE_TASK_SUCCESS, payload\n    });\n}\n\n\n\n","import store from \"..\";\n\nimport { CHECK_SESSION, SET_AUTH } from \"../actionTypes/authActionTypes\"\n\n\n\nexport const checkSession = (payload) => {\n    store.dispatch({\n        type: CHECK_SESSION,\n        payload\n    })\n}\n\nexport const setAuth = (payload) => {\n    store.dispatch({\n        type: SET_AUTH,\n        payload\n    })\n}","import store from \"..\"\nimport { TOGGLE_TASK_MODAL } from \"../actionTypes/modalActionTypes\"\n\n\nexport const toggleTaskModal = (payload) => {\n    store.dispatch({\n        type: TOGGLE_TASK_MODAL,\n        payload\n    })\n}","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Fallback = () => {\n  return (\n    <div className=\"text-center my-5\">\n      <Spinner animation=\"border\" role=\"status\" size=\"lg\" />\n    </div>\n  );\n};\n\nexport default Fallback;\n","export const CHECK_SESSION = 'CHECK_SESSION';\nexport const SET_AUTH = 'SET_AUTH';\n","export const TOGGLE_TASK_MODAL = 'TOGGLE_TASK_MODAL';"],"sourceRoot":""}